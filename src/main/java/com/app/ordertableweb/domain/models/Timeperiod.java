package com.app.ordertableweb.domain.models;

import java.math.BigDecimal;
import java.math.BigInteger;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Base64;
import java.sql.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Objects;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Set;

import javax.persistence.*;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Immutable;
import org.hibernate.annotations.Subselect;
import org.hibernate.annotations.Synchronize;
import org.springframework.validation.annotation.Validated;
import com.app.ordertableweb.domain.utils.ByteConverter;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import org.springframework.format.annotation.DateTimeFormat;
import com.app.ordertableweb.domain.utils.StringConverter;

@Entity
@Table(name = "timeperiod")
public class Timeperiod implements java.io.Serializable {
	/*
	* Added insertable=false and updatable=false.
	* This means that this column will not be used in INSERT or UPDATE statements,
	* because its value is automatically generated by the database.
	*/
	@Id
	@GeneratedValue(generator = "UUID")
	@GenericGenerator(
	name = "UUID",
	strategy = "org.hibernate.id.UUIDGenerator"
	)
	@Column(name = "timeperiod_id", updatable = false, insertable = false, nullable = false)
	@JsonProperty("timeperiod_id")
	@JsonFormat(shape = JsonFormat.Shape.STRING)
	private String timeperiod_id;
	@Transient // This annotation tells Hibernate not to map this property
	@JsonProperty("restaurant_id")
	@JsonFormat(shape = JsonFormat.Shape.STRING)
	private String restaurant_id;
	@Column(name = "account_id")
	@JsonProperty("account_id")
	@JsonFormat(shape = JsonFormat.Shape.STRING)
	private String account_id;
	@DateTimeFormat(pattern = "yyyy-MM-dd")
	@Column(name="start_period",columnDefinition = "DATE")  // Specify the column type explicitly if needed
	@JsonProperty("start_period")
	@JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
	private Date start_period;
	@DateTimeFormat(pattern = "yyyy-MM-dd")
	@Column(name="end_period",columnDefinition = "DATE")  // Specify the column type explicitly if needed
	@JsonProperty("end_period")
	@JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
	private Date end_period;
	// Foreign Key: timeperied_ibfk_1
	@JsonIgnore
	@ManyToOne(cascade={CascadeType.PERSIST,CascadeType.MERGE,CascadeType.DETACH,CascadeType.REFRESH})
	@JoinColumn(name = "restaurant_id", referencedColumnName = "restaurant_id")
	private Restaurant restaurant;
	public Timeperiod() {
	}
	public Timeperiod(
	String timeperiod_id
	,
	Restaurant restaurant
	,
	String account_id
	,
	Date start_period
	,
	Date end_period
	) {
		this.timeperiod_id = timeperiod_id;
		this.restaurant = restaurant;
		this.restaurant_id = (this.restaurant!=null) ? this.restaurant.getRestaurantId() : null;
		this.account_id = account_id;
		this.start_period = start_period;
		this.end_period = end_period;
		this.Init();
	}
	public void Init() {
	}
	public void setTimeperiodId(String timeperiod_id) {
		this.timeperiod_id = timeperiod_id;
	}
	public String getTimeperiodId() {
		return this.timeperiod_id;
	}
	public void setRestaurant(Restaurant restaurant) {
		this.restaurant = restaurant;
		this.restaurant_id = (this.restaurant!=null) ? this.restaurant.getRestaurantId() : null;
	}
	public Restaurant getRestaurant() {
		return this.restaurant;
	}
	public String getRestaurant_id() {
		this.restaurant_id = (this.restaurant!=null) ? this.restaurant.getRestaurantId() : null;
		return this.restaurant_id;
	}
	public void setAccountId(String account_id) {
		this.account_id = account_id;
	}
	public String getAccountId() {
		return this.account_id;
	}
	public void setStartPeriod(Date start_period) {
		this.start_period = start_period;
	}
	public Date getStartPeriod() {
		return this.start_period;
	}
	public void setEndPeriod(Date end_period) {
		this.end_period = end_period;
	}
	public Date getEndPeriod() {
		return this.end_period;
	}
	@Override
	public String toString() {
		return "Timeperiod [" +
		"timeperiod_id"+
		"=" + StringConverter.toString(this.timeperiod_id)+
		","+
		"=" + this.restaurant.toString()+
		","+
		"account_id"+
		"=" + StringConverter.toString(this.account_id)+
		","+
		"start_period"+
		"=" + StringConverter.toString(this.start_period)+
		","+
		"end_period"+
		"=" + StringConverter.toString(this.end_period)+
		"]";
	}
	@Override
	public boolean equals(Object obj) {
		if (this == obj){
			return true;
		}
		if (obj == null){
			return false;
		}
		if (getClass() != obj.getClass()){
			return false;
		}
		Timeperiod other = (Timeperiod) obj;
		return Objects.equals(this.timeperiod_id, other.timeperiod_id)
			&& Objects.equals(this.restaurant, other.restaurant)
			&& Objects.equals(this.account_id, other.account_id)
			&& Objects.equals(this.start_period, other.start_period)
			&& Objects.equals(this.end_period, other.end_period);
	}
}